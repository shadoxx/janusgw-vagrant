#!/bin/bash

compile_websockets_lib() {
	if [ ! -d "/home/vagrant/libwebsockets" ]; then
		echo -e "\n[*] Cloning the libwebsockets repository"
		git clone --depth 1 -b v3.0.0 https://github.com/warmcat/libwebsockets.git /home/vagrant/libwebsockets
    mkdir /home/vagrant/libwebsockets/build
	fi

	cd /home/vagrant/libwebsockets/build
	
	echo -e "\n[*] Building libwebsockets..."
	cmake -DLWS_WITH_HTTP2=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" ..
	make

	echo -e "\n[*] Installing libwebsockets shared lib to /usr"
	make install
}

compile_janus_server() {
	if [ ! -d "/vagrant/cache/janus-gateway" ]; then
		echo -e "\n[*] Cloning the janus-gateway repository"
		git clone https://github.com/meetecho/janus-gateway.git /vagrant/cache/janus-gateway
	fi

	cd /vagrant/cache/janus-gateway

	sh autogen.sh
	./configure --exec-prefix=/usr --prefix=/ --disable-data-channels --disable-rabbitmq --disable-mqtt

	echo -e "\n[*] Building janus-gateway executeable and plugins..."
	make -j$(nproc)

	echo -e "\n[*] Installing to local system"
	make install

	echo -e "\n[*] Generating fresh configuration files"
	make configs

  echo -e "\n[*] Installing custom configuration files to /etc/janus"
  for file in $(ls -1 "/vagrant/provision/conf/janus"); do
    install -v -m 640 /vagrant/provision/conf/janus/$file /etc/janus
  done
}

install_janus_service() {
	echo -e "\n[*] Installing, enabling, and starting the janus service via systemd"
	install -m 644 /vagrant/provision/conf/systemd/janus.service /lib/systemd/system
	systemctl daemon-reload
	systemctl enable janus
}

generate_ssl_certificate() {
  local CERT_PATH=/vagrant/cache/ssl/certificate.pem
  local KEY_PATH=/vagrant/cache/ssl/privatekey.pem
   
  if [ ! -d "/vagrant/cache/ssl" ]; then
    echo -e "\n[*] Running first time generation of X509 certificate for localhost"
    mkdir -p /vagrant/cache/ssl
    openssl req -x509 -out $CERT_PATH -keyout $KEY_PATH \
      -newkey rsa:2048 -nodes -sha256 \
      -subj '/CN=localhost' -extensions EXT -config <( \
      printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")
  fi
}

apply_patch_a() {
  echo -e "\n[*] PATCH A: creating a symlink from /etc/janus to /usr/local/etc/janus"
  ln -vs /etc/janus /usr/local/etc/janus
  systemctl start janus
}

apply_patch_b() {
  echo -e "\n[*] PATCH B: copying the contents of /share/janus/demos to Nginx webroot"
  cp -vr /share/janus/demos/* /var/www/html
}

echo -e "\n"
echo -e "=============================================================================="
echo -e " janus-server autocompiler                                                    "
echo -e "=============================================================================="

compile_websockets_lib
compile_janus_server
generate_ssl_certificate
install_janus_service

apply_patch_a
apply_patch_b
